[{"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/index.js":"1","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/App.js":"2","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Layout.js":"3","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/Routes.js":"4","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/Signup.js":"5","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/Signin.js":"6","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/Activate.js":"7","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/helpers.js":"8","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Private.js":"9","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/PrivateRoute.js":"10","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Admin.js":"11","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/AdminRoute.js":"12","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Update.js":"13","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/components/CreateArea.jsx":"14","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/components/Header.jsx":"15","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/components/Footer.jsx":"16","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/components/Note.jsx":"17","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/Calendar.js":"18","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Modal.js":"19"},{"size":508,"mtime":1610166107173,"results":"20","hashOfConfig":"21"},{"size":369,"mtime":1610724604787,"results":"22","hashOfConfig":"21"},{"size":3802,"mtime":1610298157289,"results":"23","hashOfConfig":"21"},{"size":1540,"mtime":1613659214784,"results":"24","hashOfConfig":"21"},{"size":3066,"mtime":1610253488444,"results":"25","hashOfConfig":"21"},{"size":3280,"mtime":1610725907945,"results":"26","hashOfConfig":"21"},{"size":2633,"mtime":1610337633790,"results":"27","hashOfConfig":"21"},{"size":2475,"mtime":1610293567937,"results":"28","hashOfConfig":"21"},{"size":1220,"mtime":1610299264781,"results":"29","hashOfConfig":"21"},{"size":743,"mtime":1610258928473,"results":"30","hashOfConfig":"21"},{"size":164,"mtime":1613659590813,"results":"31","hashOfConfig":"21"},{"size":650,"mtime":1610261381900,"results":"32","hashOfConfig":"21"},{"size":4093,"mtime":1610297982935,"results":"33","hashOfConfig":"21"},{"size":1366,"mtime":1613654743704,"results":"34","hashOfConfig":"21"},{"size":239,"mtime":1613654752679,"results":"35","hashOfConfig":"21"},{"size":192,"mtime":1613654749164,"results":"36","hashOfConfig":"21"},{"size":377,"mtime":1610298757716,"results":"37","hashOfConfig":"21"},{"size":9781,"mtime":1613656053699,"results":"38","hashOfConfig":"21"},{"size":1489,"mtime":1612356974000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"cyb60z",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/index.js",[],["89","90"],"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/App.js",["91"],"import React from 'react';\nimport Layout from './core/Layout';\n\nconst App = () => {\n  return (\n    <Layout>\n      <h1 className=\"pt-5 text-center\">Welcome</h1>\n      <div className=\"text-center\">\n        <img\n          src={`${process.env.PUBLIC_URL}/toppage.jpg`}\n          style={{ height: \"80vh\" }}\n        />\n      </div>\n\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Layout.js",[],"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/Routes.js",["92"],"import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from './App';\nimport Signup from './auth/Signup';\nimport Signin from './auth/Signin';\nimport Activate from './auth/Activate';\nimport Update from './core/Update';\nimport Private from './core/Private';\nimport Calendar from './Calendar';\nimport PrivateRoute from './auth/PrivateRoute';\nimport Admin from './core/Admin';\nimport AdminRoute from './auth/AdminRoute';\n\n//Routerは、どのURLが、どのリクエストに紐づいているのかを設定する\n//ReactではBrowserRouterというコンポーネントを使う\n//<Switch>内にルーティングを記述することで、urlにマッチされた最初のルーティングだけがレンダリングされる\n//component={コンポーネント名}：URLがマッチしたときにレンダリングするコンポーネント\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={App} />\n                <Route path=\"/signup\" exact component={Signup} />\n                <Route path=\"/signin\" exact component={Signin} />\n                <Route path=\"/auth/activate/:token\" exact component={Activate} />\n                <PrivateRoute path=\"/update\" exact component={Update} />\n                <PrivateRoute path=\"/private\" exact component={Calendar} />\n                <AdminRoute path=\"/admin\" exact component={Admin} />\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/Signup.js",["93"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport axios from 'axios';\nimport { isAuth } from './helpers';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst Signup = () => {\n    const [values, setValues] = useState({\n        name: 'Sayaka',\n        email: 'sayaka.osx@gmail.com',\n        password: 'rrrrrr',\n        buttonText: 'Submit'\n    });\n\n\n    const { name, email, password, buttonText } = values;\n\n    const handleChange = name => event => {\n        // console.log(event.target.value);\n        setValues({ ...values, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, buttonText: 'Submitting' });\n\n        const reactAppApi = process.env.REACT_APP_API;\n        //axios:ブラウザやnode.js上で動くPromiseベースのHTTPクライアント\n        //      HTTP通信を簡単に行うことができる\n        axios.post(`${reactAppApi}/signup`,\n            { name, email, password }\n        )\n            .then(response => {\n                console.log('SIGNUP SUCCESS', response);\n                setValues({ ...values, name: '', email: '', password: '', buttonText: 'Submitted' });\n                //react-toastifyのメソッド アラートを表示する\n                toast.success(response.data.message);\n            })\n            .catch(error => {\n                console.log('SIGNUP ERROR', error.response.data);\n                setValues({ ...values, buttonText: 'Submit' });\n                toast.error(error.response.data.error);\n            });\n    };\n\n    const signupForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} value={name} type=\"text\" className=\"form-control\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} value={email} type=\"email\" className=\"form-control\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} value={password} type=\"password\" className=\"form-control\" />\n            </div>\n\n            <div>\n                <button className=\"btn btn-primary\" onClick={clickSubmit}>\n                    {buttonText}\n                </button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <ToastContainer />\n                {isAuth() ? <Redirect to=\"/\" /> : null}\n                {/* {JSON.stringify({ name, email, password })} */}\n                <h1 className=\"p-5 text-center\">Signup</h1>\n                {signupForm()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Signup;","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/Signin.js",["94"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport axios from 'axios';\nimport { authenticate, isAuth } from './helpers';\nimport { ToastContainer, toast } from 'react-toastify';\n// import Google from './Google';\n// import Facebook from './Facebook';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst Signin = ({ history }) => {\n    const [values, setValues] = useState({\n        email: 'sayaka.osx@gmail.com',\n        password: 'rrrrrr',\n        buttonText: 'Submit'\n    });\n\n    const { email, password, buttonText } = values;\n\n    const handleChange = name => event => {\n        // console.log(event.target.value);\n        setValues({ ...values, [name]: event.target.value });\n    };\n\n    // const informParent = response => {\n    //     authenticate(response, () => {\n    //         isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/private');\n    //     });\n    // };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, buttonText: 'Submitting' });\n        const reactAppApi = process.env.REACT_APP_API;\n        axios({\n            method: 'POST',\n            url: `${reactAppApi}/signin`,\n            data: { email, password }\n        })\n            .then(response => {\n                //response.dataはtokenとuser:{ _id, name, email, role }が含まれる\n                console.log('SIGNIN SUCCESS', response);\n                // save the response (user, token) localstorage/cookie\n                authenticate(response, () => {\n                    setValues({ ...values, name: '', email: '', password: '', buttonText: 'Submitted' });\n                    // toast.success(`Hey ${response.data.user.name}, Welcome back!`);\n                    isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/private');\n                });\n            })\n            .catch(error => {\n                console.log('SIGNIN ERROR');\n                setValues({ ...values, buttonText: 'Submit' });\n                toast.error(error.response.data.error);\n            });\n    };\n\n    const signinForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} value={email} type=\"email\" className=\"form-control\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} value={password} type=\"password\" className=\"form-control\" />\n            </div>\n\n            <div>\n                <button className=\"btn btn-primary\" onClick={clickSubmit}>\n                    {buttonText}\n                </button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <ToastContainer />\n                {isAuth() ? <Redirect to=\"/\" /> : null}\n                {/* {JSON.stringify({ email, password })} */}\n                <h1 className=\"p-5 text-center\">Signin</h1>\n                {signinForm()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Signin;\n","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/Activate.js",["95","96","97","98"],"import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n//Router.jsのBrowserRouterが持ってるprops(match)を直接挿入できる\n//(react-router v4以降ではparamsの代わりにmatch.paramsを使う)\nconst Activate = ({ match, history }) => {\n    const [values, setValues] = useState({\n        name: '',\n        token: '',\n        show: true\n    });\n\n    //useEffect：第２引数の値が変わるたびに呼び出される\n    useEffect(() => {\n        let token = match.params.token;\n        let { name } = jwt.decode(token);\n        if (token) {\n            setValues({ ...values, name, token });\n        }\n    }, []);\n\n    const { name, token, show } = values;\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, buttonText: 'Submitting' });\n\n        const reactAppApi = process.env.REACT_APP_API;\n        //axios:ブラウザやnode.js上で動くPromiseベースのHTTPクライアント\n        //      HTTP通信を簡単に行うことができる\n        axios.post(`${reactAppApi}/account-activation`,\n            { token }\n        )\n            .then(response => {\n                console.log('ACCOUNT ACTIVATION', response);\n                setValues({ ...values, show: false });\n                //react-toastifyのメソッド アラートを表示する\n                toast.success(response.data.message);\n                function callback() {\n                    history.push(\"/signin\")\n                }\n                setTimeout(callback, 5000);\n            })\n            .catch(error => {\n                console.log('ACCOUNT ACTIVATION ERROR', error.response.data.error);\n                setValues({ ...values, buttonText: 'Submit' });\n                toast.error(error.response.data.error);\n            });\n    };\n\n    const activationLink = () => (\n        <div className=\"text-center\">\n            <h1 className=\"p-5\">Hey {name}, Ready to activate your account?</h1>\n            <button className=\"btn btn-outline-primary\" onClick={clickSubmit}>\n                Activate Account\n        </button>\n        </div>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <ToastContainer />\n                {/* {JSON.stringify({ token })} */}\n                {activationLink()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Activate;","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/helpers.js",[],"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Private.js",["99","100"],"import React, { useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Note from \"../components/Note\";\nimport CreateArea from \"../components/CreateArea\";\nimport Layout from '../core/Layout';\n\nfunction Private() {\n    const [notes, setNotes] = useState([]);\n\n    function addNote(newNote) {\n        setNotes(prevNotes => {\n            return [...prevNotes, newNote];\n        });\n    }\n\n    function deleteNote(id) {\n        setNotes(prevNotes => {\n            return prevNotes.filter((noteItem, index) => {\n                return index !== id;\n            });\n        });\n    }\n\n    return (\n        <Layout>\n            <div>\n                <CreateArea onAdd={addNote} />\n                {notes.map((noteItem, index) => {\n                    return (\n                        <Note\n                            key={index}\n                            id={index}\n                            title={noteItem.title}\n                            content={noteItem.content}\n                            onDelete={deleteNote}\n                        />\n                    );\n                })}\n            </div>\n        </Layout>\n    );\n}\n\nexport default Private;","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/PrivateRoute.js",["101"],"import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from './helpers';\n\n//引数にreact componentとその他(...rest)をとる\n//参照: https://reactrouter.com/web/example/auth-workflows\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuth() ? (\n                <Component {...props} />\n            ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/signin',\n                            state: { from: props.location }\n                        }}\n                    />\n                )\n        }\n    ></Route>\n);\n\nexport default PrivateRoute;\n","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Admin.js",[],"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/auth/AdminRoute.js",["102"],"import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from './helpers';\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuth() && isAuth().role === 'admin' ? (\n                <Component {...props} />\n            ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/signin',\n                            state: { from: props.location }\n                        }}\n                    />\n                )\n        }\n    ></Route>\n);\n\nexport default AdminRoute;\n","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Update.js",["103","104","105"],"import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport axios from 'axios';\nimport { isAuth, getCookie, signout, updateUser } from '../auth/helpers';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst Private = ({ history }) => {\n    const [values, setValues] = useState({\n        role: '',\n        name: '',\n        email: '',\n        password: '',\n        buttonText: 'Submit'\n    });\n\n    const token = getCookie('token');\n\n    useEffect(() => {\n        loadProfile();\n    }, []);\n\n    const loadProfile = () => {\n        axios({\n            method: 'GET',\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n            .then(response => {\n                console.log('PRIVATE PROFILE UPDATE', response);\n                const { role, name, email } = response.data;\n                setValues({ ...values, role, name, email });\n            })\n            .catch(error => {\n                console.log('PRIVATE PROFILE UPDATE ERROR', error.response.data.error);\n                if (error.response.status === 401) {\n                    signout(() => {\n                        history.push('/');\n                    });\n                }\n            });\n    };\n\n    const { role, name, email, password, buttonText } = values;\n\n    const handleChange = name => event => {\n        // console.log(event.target.value);\n        setValues({ ...values, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, buttonText: 'Submitting' });\n        axios({\n            method: 'PUT',\n            url: `${process.env.REACT_APP_API}/user/update`,\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            data: { name, password }\n        })\n            .then(response => {\n                console.log('PRIVATE PROFILE UPDATE SUCCESS', response);\n                updateUser(response, () => {\n                    setValues({ ...values, buttonText: 'Submitted' });\n                    toast.success('Profile updated successfully');\n                });\n            })\n            .catch(error => {\n                console.log('PRIVATE PROFILE UPDATE ERROR', error.response.data.error);\n                setValues({ ...values, buttonText: 'Submit' });\n                toast.error(error.response.data.error);\n            });\n    };\n\n    const updateForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Role</label>\n                <input defaultValue={role} type=\"text\" className=\"form-control\" disabled />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} value={name} type=\"text\" className=\"form-control\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input defaultValue={email} type=\"email\" className=\"form-control\" disabled />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} value={password} type=\"password\" className=\"form-control\" />\n            </div>\n\n            <div>\n                <button className=\"btn btn-primary\" onClick={clickSubmit}>\n                    {buttonText}\n                </button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <ToastContainer />\n                <h1 className=\"pt-5 text-center\">Private</h1>\n                <p className=\"lead text-center\">Profile update</p>\n                {updateForm()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Private;\n","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/components/CreateArea.jsx",[],"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/components/Header.jsx",[],"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/components/Footer.jsx",[],"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/components/Note.jsx",[],"/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/Calendar.js",["106","107","108","109","110","111"],"import React, { useState, useEffect, useRef } from 'react';\n// FullCalendarコンポーネント。\nimport FullCalendar from '@fullcalendar/react'\n// FullCalendarで週表示を可能にするモジュール。\nimport timeGridPlugin from '@fullcalendar/timegrid'\n// FullCalendarで月表示を可能にするモジュール。\nimport dayGridPlugin from '@fullcalendar/daygrid'\n// FullCalendarで日付や時間が選択できるようになるモジュール。\nimport interactionPlugin from '@fullcalendar/interaction'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Layout from './core/Layout';\nimport Modal from './core/Modal';\n\n// function myEventsType(id, title, start, end, memo) {\n//     this.id = id;\n//     this.title = title;\n//     this.start = start;\n//     this.end = end;\n//     this.memo = memo;\n// }\n\n//ooo\nconst Calendar = ({ match }) => {\n    //backend接続用\n    const reactAppApi = process.env.REACT_APP_API;\n\n    // const classes = useStyles()\n    const [show, setShow] = useState(false)\n\n    const [myEvents, setMyEvents] = useState([]);\n    const [inputs, setInputs] = useState(\n        // new myEventsType(0, \"\", \"\", \"\", false)\n        {\n            id: 0,\n            title: \"\",\n            start: new Date(),\n            end: new Date(),\n            allday: false\n        }\n    );\n    const { id, title, start, end, allday } = inputs;\n\n    const ref = useRef(null);\n\n    const saveItem = () => {\n\n        //axios:ブラウザやnode.js上で動くPromiseベースのHTTPクライアント\n        //      HTTP通信を簡単に行うことができる\n        axios(`${reactAppApi}/scheduleItem/new`,\n            {\n                method: 'PUT',\n                data: { title, start, end, allday }\n            })\n            .then(response => {\n                console.log('SCHEDULE ITEM SAVED SUCCESSFULLY', response);\n                setInputs({ ...inputs, title: '', start: '', end: '', allDay: false });\n                //react-toastifyのメソッド アラートを表示する\n                toast.success(response.data.message);\n            })\n            .catch(error => {\n                console.log('SCHEDULE EVENT SAVING ERROR', error.response.data.error);\n                // console.log('SCHEDULE EVENT SAVING ERROR');\n                setInputs({ ...inputs, title: '', start: '', end: '', allDay: false });\n                toast.error(error.response.data.error);\n            });\n        if (setShow) {\n            setShow(false);\n        }\n    }\n\n    // const [list, setLists] = useState([]);\n    useEffect(() => {\n        readItems();\n    }, [])\n\n    function readItems() {\n        const promise = axios.get(`${reactAppApi}/scheduleItem/read`).then((response) => {\n            console.log('SCHEDULE ITEMS READ SUCCESSFULLY', response.data.items)\n            const result = response.data.items;\n            // const testItems = [];\n            for (let i = 0; i < result.length; i++) {\n                // testItems.push({\n                //     id: i,\n                //     title: result[i].title,\n                //     start: result[i].start,\n                //     end: result[i].end\n                // })\n                ref.current.getApi().addEvent({\n                    id: i,\n                    title: result[i].title,\n                    start: result[i].start,\n                    end: result[i].end\n                });\n            }\n            // testItems.push({\n            //     id: 0,\n            //     title: result[0].title,\n            //     start: result[0].start,\n            //     end: result[0].end\n            // })\n            // setLists(`testItems：${testItems}`);\n            console.log(\"Finished readItems\")\n            // setLists(testItems);\n            // return response.data.items;\n            toast.success(response.data.message);\n        }).catch(error => {\n            console.log('SCHEDULE ITEMS READING ERROR', error);\n            // toast.error(error.response.data.error)\n            // return [];\n        });\n\n        // return it\n        // return promise;\n    }\n\n    //動作確認用　テストイベント\n    const defaultEvents = [{\n        id: 0,\n        title: \"event 1\",\n        start: \"2021-02-11 10:00:00\",\n        end: \"2021-02-11 11:00:00\",\n        memo: \"memo1\",\n    },\n    {\n        id: 1,\n        title: \"event 2\",\n        start: \"2021-02-12 14:00:00\",\n        end: \"2020-02-12 16:00:00\",\n        memo: \"memo2\",\n    }];\n\n\n    //カレンダーがクリックされた時にイベント登録用のフォームを表示する。\n    const handleSelect = (selectInfo) => {\n        setShow(true);\n\n        setInputs({\n            ...inputs,\n            start: selectInfo.start,\n            end: selectInfo.end\n        })\n    }\n\n    // const clickSubmit = event => {\n    //     event.preventDefault();\n    //     // setValues({ ...values, buttonText: 'Submitting' });\n\n    //     const reactAppApi = process.env.REACT_APP_API;\n    //     //axios:ブラウザやnode.js上で動くPromiseベースのHTTPクライアント\n    //     //      HTTP通信を簡単に行うことができる\n    //     axios.post(`${reactAppApi}/schedule/save`,\n    //         { title, start, end, allday }\n    //     )\n    //         .then(response => {\n    //             console.log('SCHEDULE EVENT SAVED SUCCESSFULLY', response);\n    //             setInputs({ ...values, title: '', start: '', end: '', allDay: false });\n    //             //react-toastifyのメソッド アラートを表示する\n    //             toast.success(response.data.message);\n    //         })\n    //         .catch(error => {\n    //             console.log('SCHEDULE EVENT SAVING ERROR', error.response.data);\n    //             setValues({ ...values, buttonText: 'Submit' });\n    //             toast.error(error.response.data.error);\n    //         });\n    // };\n\n\n    const titleElement = (\n        <div>\n            <label>タイトル</label>\n            <input\n                type=\"text\"\n                value={title}\n                name=\"inputTitle\"\n                onChange={event => {\n                    // タイトルが入力されたら、その値をStateに登録する。\n                    setInputs({ ...inputs, title: event.target.value })\n                }}\n            />\n        </div>\n    )\n\n    const startTimeElement = (\n        <div>\n            <label>開始</label>\n            <DatePicker\n                dateFormat=\"yyyy/MM/d HH:mm\"\n                selected={start}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={30}\n                todayButton=\"today\"\n                name=\"inputStart\"\n                onChange={(time) => {\n                    // const timeString = formatDate(time, \"yyyy/MM/d HH:mm\")\n                    // setInputStart(time)\n                    // 日時が入力されたら、その値をstartに登録する。\n                    setInputs({ ...inputs, start: time })\n                }}\n            />\n        </div>\n    )\n\n    const endTimeElement = (\n        <div>\n            <label>終了</label>\n            <DatePicker\n                dateFormat=\"yyyy/MM/d HH:mm\"\n                selected={end}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={10}\n                todayButton=\"today\"\n                name=\"inputEnd\"\n                onChange={(time) => {\n                    // const timeString = formatDate(time, \"yyyy/MM/d HH:mm\")\n                    setInputs({ ...inputs, end: time })\n                }}\n            />\n        </div>\n    )\n\n    const btnElement = (\n        <div>\n            <input\n                type=\"button\"\n                value=\"Cancel\"\n                onClick={() => {\n                    setShow(false)\n                }}\n            />\n            <input\n                type=\"button\"\n                value=\"Save\"\n                onClick={() => saveItem()}\n            />\n        </div>\n    )\n\n    //フォームのコンテンツ\n    const content = (\n        <form action=\"\">\n            <p>Create a new event</p>\n            {/* <p>{readItems2()}</p> */}\n            {titleElement}\n            {startTimeElement}\n            {endTimeElement}\n            {btnElement}\n        </form>\n    );\n\n\n    const CalendarComponent = () => (\n        <div>\n            <p>{console.log(\"fullcalender called\")}</p>\n            <FullCalendar\n                plugins={[timeGridPlugin, dayGridPlugin, interactionPlugin]} // 週表示、月表示、日付等のクリックを可能にするプラグインを設定。\n                initialView=\"timeGridWeek\" // カレンダーの初期表示設定。この場合、週表示。\n                slotDuration=\"00:30:00\"　// 週表示した時の時間軸の単位。\n                selectable={true} // 日付選択を可能にする。interactionPluginが有効になっている場合のみ。\n                // initialEvents={list}\n                headerToolbar={{ // カレンダーのヘッダー設定。\n                    start: 'title',\n                    center: 'prev, next, today',\n                    end: 'dayGridMonth,timeGridWeek'\n                }}\n                ref={ref}\n                select={handleSelect}\n            />\n        </div>\n    );\n\n\n    return (\n        <Layout>\n            <div>\n                <ToastContainer />\n                {/* <p>{JSON.stringify(list)}</p> */}\n                <Modal show={show} setShow={setShow} content={content} />\n                {CalendarComponent()}\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default Calendar;","/Users/saya/Desktop/WebDevelopment/Mern-Authentication/client/src/core/Modal.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":9,"column":9,"nodeType":"118","endLine":12,"endColumn":11},{"ruleId":"119","severity":1,"message":"120","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":15},{"ruleId":"119","severity":1,"message":"123","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"123","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"123","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"124","line":2,"column":16,"nodeType":"121","messageId":"122","endLine":2,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":25,"column":8,"nodeType":"127","endLine":25,"endColumn":10,"suggestions":"128"},{"ruleId":"119","severity":1,"message":"129","line":27,"column":26,"nodeType":"121","messageId":"122","endLine":27,"endColumn":30},{"ruleId":"119","severity":1,"message":"130","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"131","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"132","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"132","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"123","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"124","line":2,"column":16,"nodeType":"121","messageId":"122","endLine":2,"endColumn":24},{"ruleId":"125","severity":1,"message":"133","line":22,"column":8,"nodeType":"127","endLine":22,"endColumn":10,"suggestions":"134"},{"ruleId":"119","severity":1,"message":"135","line":34,"column":12,"nodeType":"121","messageId":"122","endLine":34,"endColumn":20},{"ruleId":"119","severity":1,"message":"136","line":34,"column":22,"nodeType":"121","messageId":"122","endLine":34,"endColumn":33},{"ruleId":"119","severity":1,"message":"137","line":45,"column":13,"nodeType":"121","messageId":"122","endLine":45,"endColumn":15},{"ruleId":"125","severity":1,"message":"138","line":78,"column":8,"nodeType":"127","endLine":78,"endColumn":10,"suggestions":"139"},{"ruleId":"119","severity":1,"message":"140","line":81,"column":15,"nodeType":"121","messageId":"122","endLine":81,"endColumn":22},{"ruleId":"119","severity":1,"message":"141","line":121,"column":11,"nodeType":"121","messageId":"122","endLine":121,"endColumn":24},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Private' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["144"],"'show' is assigned a value but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'loadProfile'. Either include it or remove the dependency array.",["145"],"'myEvents' is assigned a value but never used.","'setMyEvents' is assigned a value but never used.","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'readItems'. Either include it or remove the dependency array.",["146"],"'promise' is assigned a value but never used.","'defaultEvents' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [match.params.token, values]",{"range":"153","text":"154"},"Update the dependencies array to be: [loadProfile]",{"range":"155","text":"156"},"Update the dependencies array to be: [readItems]",{"range":"157","text":"158"},[789,791],"[match.params.token, values]",[634,636],"[loadProfile]",[2548,2550],"[readItems]"]